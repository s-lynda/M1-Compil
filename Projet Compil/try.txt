import numpy as np 
x=2

type test.txt | mycompiler.exe

bison -v  syntax.y -o  pp -> pour les conflicts



{Int} { 
        Col=Col+strlen(yytext);
        yylval.entier=atoi(yytext); 
        if((yylval.entier>(-32767)) && (yylval.entier<32767))
        {  
          printf ("ligne %d : mot cle  reconnue est %s \n", nb_ligne,yytext);
          return cst_int;
        }
        else {
            printf ("Erreur lexicale: depassement de la taille des entiers a la Ligne %d et a la colonne %d  \n",nb_ligne,Col);
            
        }
       }
{float} {yylval.reel=atof(yytext);printf ("ligne %d : mot cle  reconnue est %s \n", nb_ligne,yytext);Col=Col+strlen(yytext); return cst_reel;}




entier [+-] {chiffre1}{chiffre}*|0
float ({chiffre1}|0)*"."{chiffre}*
char \'{lettre}\'|\`{lettre}\`|\"{lettre}\"
boolean [false true]



{int} {yylval.entier=atoi(yytext); 
//         Col = Col + strlen(yytext);
//         if(yylval.entier>32767 || yylval.entier<(-32768))
//         {
// 			printf ("Erreur lexicale: depassement de la taille des entiers  a la Ligne %d et a la colonne %d \n", nb_ligne, Col);
// 		}

//         }
// {char}  {  yylval.car=strdup(yytext); printf("Ligne %d char reconnu %s \n" ,nb_ligne, yytext );  Col = Col + strlen(yytext); return cst_car;}
// {bool} {yylval.car=strdup(yytext); printf("ligne %d : boolean reconnu %s \n",nb_ligne,yytext); return cst_bool; }     